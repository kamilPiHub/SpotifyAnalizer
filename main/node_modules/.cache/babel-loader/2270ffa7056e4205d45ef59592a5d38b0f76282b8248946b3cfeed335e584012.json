{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kvmil\\\\Desktop\\\\SpotifyAnalyzer\\\\SpotifyAnalizer\\\\main\\\\src\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\n// Plik: frontend/src/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [profile, setProfile] = useState(null);\n  // ... inne stany ...\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Pobieramy token z localStorage\n      const accessToken = localStorage.getItem('spotify_access_token');\n      if (!accessToken) {\n        // Jeśli nie ma tokenu, przekieruj do logowania\n        window.location.href = '/';\n        return;\n      }\n\n      // Tworzymy nagłówek autoryzacyjny\n      const headers = {\n        'Authorization': `Bearer ${accessToken}`\n      };\n      try {\n        // Wykonujemy zapytania z ręcznie dodanym nagłówkiem\n        const profileRes = await fetch('/api/profile', {\n          headers\n        });\n        if (!profileRes.ok) throw new Error('Błąd pobierania profilu');\n        const profileData = await profileRes.json();\n        setProfile(profileData);\n        // ... (pobieranie top-tracks w ten sam sposób)\n      } catch (error) {\n        console.error(error);\n        // Tutaj powinna być logika odświeżania tokenu, jeśli wystąpił błąd 401\n      }\n    };\n    fetchData();\n  }, []);\n\n  // ... (reszta kodu do wyświetlania danych, podobnie jak wcześniej) ...\n\n  const handleLogout = () => {\n    // Wylogowanie w tym modelu to po prostu wyczyszczenie localStorage\n    localStorage.removeItem('spotify_access_token');\n    localStorage.removeItem('spotify_refresh_token');\n    localStorage.removeItem('spotify_token_expires_in');\n    window.location.href = '/';\n  };\n  if (!profile) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Witaj, \", profile.display_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Wyloguj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ANwzos52wNXGupoJVH1cRI1qCto=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","profile","setProfile","fetchData","accessToken","localStorage","getItem","window","location","href","headers","profileRes","fetch","ok","Error","profileData","json","error","console","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","display_name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kvmil/Desktop/SpotifyAnalyzer/SpotifyAnalizer/main/src/DashboardPage.js"],"sourcesContent":["// Plik: frontend/src/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Dashboard = () => {\r\n  const [profile, setProfile] = useState(null);\r\n  // ... inne stany ...\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // Pobieramy token z localStorage\r\n      const accessToken = localStorage.getItem('spotify_access_token');\r\n\r\n      if (!accessToken) {\r\n        // Jeśli nie ma tokenu, przekieruj do logowania\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n      \r\n      // Tworzymy nagłówek autoryzacyjny\r\n      const headers = {\r\n        'Authorization': `Bearer ${accessToken}`\r\n      };\r\n\r\n      try {\r\n        // Wykonujemy zapytania z ręcznie dodanym nagłówkiem\r\n        const profileRes = await fetch('/api/profile', { headers });\r\n        if (!profileRes.ok) throw new Error('Błąd pobierania profilu');\r\n        const profileData = await profileRes.json();\r\n        setProfile(profileData);\r\n        // ... (pobieranie top-tracks w ten sam sposób)\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Tutaj powinna być logika odświeżania tokenu, jeśli wystąpił błąd 401\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // ... (reszta kodu do wyświetlania danych, podobnie jak wcześniej) ...\r\n\r\n  const handleLogout = () => {\r\n    // Wylogowanie w tym modelu to po prostu wyczyszczenie localStorage\r\n    localStorage.removeItem('spotify_access_token');\r\n    localStorage.removeItem('spotify_refresh_token');\r\n    localStorage.removeItem('spotify_token_expires_in');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  if (!profile) return <div>Ładowanie...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Witaj, {profile.display_name}</h1>\r\n      <button onClick={handleLogout}>Wyloguj</button>\r\n      {/* ... wyświetlanie reszty danych ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C;;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;MAEhE,IAAI,CAACF,WAAW,EAAE;QAChB;QACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;QAC1B;MACF;;MAEA;MACA,MAAMC,OAAO,GAAG;QACd,eAAe,EAAE,UAAUN,WAAW;MACxC,CAAC;MAED,IAAI;QACF;QACA,MAAMO,UAAU,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;UAAEF;QAAQ,CAAC,CAAC;QAC3D,IAAI,CAACC,UAAU,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC9D,MAAMC,WAAW,GAAG,MAAMJ,UAAU,CAACK,IAAI,CAAC,CAAC;QAC3Cd,UAAU,CAACa,WAAW,CAAC;QACvB;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB;MACF;IACF,CAAC;IAEDd,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAd,YAAY,CAACe,UAAU,CAAC,sBAAsB,CAAC;IAC/Cf,YAAY,CAACe,UAAU,CAAC,uBAAuB,CAAC;IAChDf,YAAY,CAACe,UAAU,CAAC,0BAA0B,CAAC;IACnDb,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B,CAAC;EAED,IAAI,CAACR,OAAO,EAAE,oBAAOH,OAAA;IAAAuB,QAAA,EAAK;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE5C,oBACE3B,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,GAAI,SAAO,EAACpB,OAAO,CAACyB,YAAY;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtC3B,OAAA;MAAQ6B,OAAO,EAAER,YAAa;MAAAE,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5C,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvDID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAyDf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}