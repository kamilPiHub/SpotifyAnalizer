{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kvmil\\\\Desktop\\\\SpotifyAnalyzer\\\\SpotifyAnalizer\\\\main\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\n// src/pages/DashboardPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DashboardPage.css';\nimport TrackItem from '../components/TrackItem';\nimport ArtistCard from '../components/ArtistCard';\n\n// Konfigurujemy axios, aby automatycznie wysyłał cookies (sesję)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5000\",\n  withCredentials: true\n});\nconst DashboardPage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [topArtists, setTopArtists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // Równoległe pobieranie danych\n        const [userRes, tracksRes, artistsRes] = await Promise.all([apiClient.get('/api/profile'), apiClient.get('/api/top-tracks?limit=10'), apiClient.get('/api/top-artists?limit=10')]);\n        setUser(userRes.data);\n        setTopTracks(tracksRes.data.items);\n        setTopArtists(artistsRes.data.items);\n      } catch (error) {\n        console.error(\"Błąd podczas pobierania danych:\", error);\n        // Można przekierować do logowania, jeśli błąd to 401 Unauthorized\n        if (error.response && error.response.status === 401) {\n          window.location.href = \"/\";\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [user && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Witaj, \", user.display_name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Oto Twoje podsumowanie Spotify.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Twoje Top 10 Utwor\\xF3w\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-list\",\n          children: topTracks.map((track, index) => /*#__PURE__*/_jsxDEV(TrackItem, {\n            track: track,\n            index: index + 1\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Twoi Top 10 Arty\\u015Bci\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-grid\",\n          children: topArtists.map(artist => /*#__PURE__*/_jsxDEV(ArtistCard, {\n            artist: artist\n          }, artist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"ySseor+fqCjw2fRiRPBifvLca34=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","TrackItem","ArtistCard","jsxDEV","_jsxDEV","apiClient","create","baseURL","withCredentials","DashboardPage","_s","user","setUser","topTracks","setTopTracks","topArtists","setTopArtists","loading","setLoading","fetchData","userRes","tracksRes","artistsRes","Promise","all","get","data","items","error","console","response","status","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","display_name","map","track","index","id","artist","_c","$RefreshReg$"],"sources":["C:/Users/kvmil/Desktop/SpotifyAnalyzer/SpotifyAnalizer/main/src/pages/DashboardPage.js"],"sourcesContent":["// src/pages/DashboardPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './DashboardPage.css';\r\nimport TrackItem from '../components/TrackItem';\r\nimport ArtistCard from '../components/ArtistCard';\r\n\r\n// Konfigurujemy axios, aby automatycznie wysyłał cookies (sesję)\r\nconst apiClient = axios.create({\r\n  baseURL: \"http://localhost:5000\",\r\n  withCredentials: true,\r\n});\r\n\r\nconst DashboardPage = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [topTracks, setTopTracks] = useState([]);\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Równoległe pobieranie danych\r\n        const [userRes, tracksRes, artistsRes] = await Promise.all([\r\n          apiClient.get('/api/profile'),\r\n          apiClient.get('/api/top-tracks?limit=10'),\r\n          apiClient.get('/api/top-artists?limit=10'),\r\n        ]);\r\n\r\n        setUser(userRes.data);\r\n        setTopTracks(tracksRes.data.items);\r\n        setTopArtists(artistsRes.data.items);\r\n      } catch (error) {\r\n        console.error(\"Błąd podczas pobierania danych:\", error);\r\n        // Można przekierować do logowania, jeśli błąd to 401 Unauthorized\r\n        if (error.response && error.response.status === 401) {\r\n            window.location.href = \"/\";\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Ładowanie danych...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {user && (\r\n        <header className=\"dashboard-header\">\r\n          <h1>Witaj, {user.display_name}!</h1>\r\n          <p>Oto Twoje podsumowanie Spotify.</p>\r\n        </header>\r\n      )}\r\n\r\n      <div className=\"data-section\">\r\n        <section>\r\n          <h2>Twoje Top 10 Utworów</h2>\r\n          <div className=\"track-list\">\r\n            {topTracks.map((track, index) => (\r\n              <TrackItem key={track.id} track={track} index={index + 1} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n        \r\n        <section>\r\n          <h2>Twoi Top 10 Artyści</h2>\r\n          <div className=\"artist-grid\">\r\n            {topArtists.map((artist) => (\r\n              <ArtistCard key={artist.id} artist={artist} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}