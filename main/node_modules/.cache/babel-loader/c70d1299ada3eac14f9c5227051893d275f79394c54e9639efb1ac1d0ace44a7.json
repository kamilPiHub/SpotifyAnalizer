{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kvmil\\\\Desktop\\\\SpotifyAnalyzer\\\\SpotifyAnalizer\\\\main\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './DashboardPage.css';\nimport TrackItem from '../components/TrackItem';\nimport ArtistCard from '../components/ArtistCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiClient = axios.create({\n  baseURL: \"/\",\n  // lub po prostu usuń baseURL\n  withCredentials: true\n});\nconst DashboardPage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [topArtists, setTopArtists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [userRes, tracksRes, artistsRes] = await Promise.all([apiClient.get('/api/profile'), apiClient.get('/api/top-tracks?limit=10'), apiClient.get('/api/top-artists?limit=10')]);\n        setUser(userRes.data);\n        setTopTracks(tracksRes.data.items);\n        setTopArtists(artistsRes.data.items);\n      } catch (error) {\n        console.error(\"Błąd podczas pobierania danych:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleLogout = async () => {\n    await logout();\n    navigate('/');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: user ? `Witaj, ${user.display_name}!` : 'Witaj!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Oto Twoje podsumowanie Spotify.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Wyloguj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Twoje Top 10 Utwor\\xF3w\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-list\",\n          children: topTracks.map((track, index) => /*#__PURE__*/_jsxDEV(TrackItem, {\n            track: track,\n            index: index + 1\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Twoi Top 10 Arty\\u015Bci\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-grid\",\n          children: topArtists.map(artist => /*#__PURE__*/_jsxDEV(ArtistCard, {\n            artist: artist\n          }, artist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"rF2iqKdEfiz89RiccE47AAn2Pe0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useAuth","TrackItem","ArtistCard","jsxDEV","_jsxDEV","apiClient","create","baseURL","withCredentials","DashboardPage","_s","user","setUser","topTracks","setTopTracks","topArtists","setTopArtists","loading","setLoading","logout","navigate","fetchData","userRes","tracksRes","artistsRes","Promise","all","get","data","items","error","console","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","display_name","onClick","map","track","index","id","artist","_c","$RefreshReg$"],"sources":["C:/Users/kvmil/Desktop/SpotifyAnalyzer/SpotifyAnalizer/main/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport './DashboardPage.css';\r\nimport TrackItem from '../components/TrackItem';\r\nimport ArtistCard from '../components/ArtistCard';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: \"/\", // lub po prostu usuń baseURL\r\n  withCredentials: true,\r\n});\r\n\r\nconst DashboardPage = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [topTracks, setTopTracks] = useState([]);\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  const { logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [userRes, tracksRes, artistsRes] = await Promise.all([\r\n          apiClient.get('/api/profile'),\r\n          apiClient.get('/api/top-tracks?limit=10'),\r\n          apiClient.get('/api/top-artists?limit=10'),\r\n        ]);\r\n\r\n        setUser(userRes.data);\r\n        setTopTracks(tracksRes.data.items);\r\n        setTopArtists(artistsRes.data.items);\r\n      } catch (error) {\r\n        console.error(\"Błąd podczas pobierania danych:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    navigate('/');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Ładowanie danych...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>{user ? `Witaj, ${user.display_name}!` : 'Witaj!'}</h1>\r\n        <p>Oto Twoje podsumowanie Spotify.</p>\r\n        <button onClick={handleLogout} className=\"logout-button\">Wyloguj</button>\r\n      </header>\r\n\r\n      <div className=\"data-section\">\r\n        <section>\r\n          <h2>Twoje Top 10 Utworów</h2>\r\n          <div className=\"track-list\">\r\n            {topTracks.map((track, index) => (\r\n              <TrackItem key={track.id} track={track} index={index + 1} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n        \r\n        <section>\r\n          <h2>Twoi Top 10 Artyści</h2>\r\n          <div className=\"artist-grid\">\r\n            {topArtists.map((artist) => (\r\n              <ArtistCard key={artist.id} artist={artist} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}